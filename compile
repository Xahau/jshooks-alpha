#!/usr/bin/env bash

self() {
  DIR=$( cd "$( dirname "$0" )/" && pwd)
  echo $DIR
}

eval $(./scripts/colors | sed 's/\(.*\)=\(.*\)/export \1="\2"/g')

clear

echo
./scripts/banner
echo

echo -e "  ${BLUE}Linting...${END}"

npm run lint

if [[ "$?" -gt "0" ]]; then
  # Linting error
  exit 1
fi

echo -e "  ${BLUE}Compiling TypeScript files to Javascript...${END}"
tsfiles=$(ls $(self)/contracts/*.ts|rev|cut -d '.' -f 2-100|rev|xargs -I___ echo "      > ${PURPLE}___.ts${END}\n      < ${GREEN}.js${END}")
numtsfiles=$(echo "$tsfiles"|wc -l|xargs)
echo -e "   - Found       ${GREEN}${numtsfiles}${END}      .ts file(s)"

if [[ "$numtsfiles" -gt 0 ]]; then
  ls $(self)/contracts/*.ts|rev|cut -d '.' -f 2-100|rev|xargs -I___ echo "npm run compile"|bash #  ___.ts --outFile ___-tsc.js
  echo -e "$tsfiles"
fi

echo

# docker exec jshooks-build /quickjslite/qjsc /contracts/bla-tsc.js

echo -e "  ${BLUE}Compiling JS files to binary Hook files ${GREEN}(.bc)${BLUE}...${END}"
jsfiles=$(ls $(self)/contracts/*.js|rev|cut -d '.' -f 2-100|cut -d '/' -f 1|rev|xargs -I___ echo "      > ${PURPLE}$(self)/contracts/___.js${END}")
numjsfiles=$(echo "$jsfiles"|wc -l|xargs)
echo -e "   - Found       ${GREEN}${numjsfiles}${END}      .js file(s)"
if [[ "$numjsfiles" -gt 0 ]]; then
  echo -e "$jsfiles"
  rm -f $(self)/build/*.bc
  rm -f $(self)/build/*.bc.raw
  echo -e "   - Compiled:${GREEN}"
  ls $(self)/contracts/*.js|rev|cut -d '.' -f 2-100|cut -d '/' -f 1|rev|xargs -I___ echo "docker exec jshooks-build sh /qjsc-compile.sh ___.js"|bash
  echo -e "${END}"
fi

echo "  You can now deploy by issuing:"
echo "     ./deploy {contract} {account}"
echo
echo "  For example:"
echo -e "     ./deploy ${BLUE}somecontract${END} ${PURPLE}ryouhapPYV5KNHmFUKrjNqsjxhnxvQiVt${END}"
echo
echo -e "  By default, a Hook will be deployed with namespace ${RED}0000..0000${END} (64x), flag ${RED}1${END}"
echo -e "  and hookon ${RED}0000ffff..ffff7000000000000000000400000${END} (all transactions)."
echo -e "  If you want to change these settings, deploy with environment variables:"
echo -e "      ${CYAN}HOOKON=...${END}"
echo -e "      ${CYAN}FLAGS=...${END}"
echo -e "      ${CYAN}NAMESPACE=...${END}"

echo